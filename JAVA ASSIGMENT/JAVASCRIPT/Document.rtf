{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}{\f2\fnil\fcharset2 Symbol;}}
{\*\listtable 
{\list\listhybrid
{\listlevel\levelnfc23\leveljc0\levelstartat1{\leveltext\'01\'B7;}{\levelnumbers;}\f2\jclisttab\tx0}
{\listlevel\levelnfc0\leveljc0\levelstartat1{\leveltext\'02\'01.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc4\leveljc0\levelstartat1{\leveltext\'02\'02.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc3\leveljc0\levelstartat1{\leveltext\'02\'03.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc2\leveljc0\levelstartat1{\leveltext\'02\'04.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc1\leveljc0\levelstartat1{\leveltext\'02\'05.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc0\leveljc0\levelstartat1{\leveltext\'02\'06.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc4\leveljc0\levelstartat1{\leveltext\'02\'07.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc23\leveljc1\levelstartat1{\leveltext\'01\'B7;}{\levelnumbers;}\f2\jclisttab\tx0}\listid1 }}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
{\*\generator Riched20 10.0.22621}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\f0\fs42\lang9 Module (JAVASCRIPT BASIC & DOM) \f1\endash  4\par
\par

\pard\sa200\sl276\slmult1\f0 1.What is JavaScript?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 JavaScript is a versatile programming language primarily used for creating interactive and dynamic content on websites. It is commonly executed in web browsers, enabling developers to manipulate webpage elements, handle user interactions, and dynamically update content without needing to reload the entire page. JavaScript is essential for modern web development, powering features like animations, form validation, interactive maps, and much more.\par

\pard\sa200\sl276\slmult1\fs42 2.What is the use of isNaN function?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 The isNaN() function in JavaScript is used to determine whether a value is NaN (Not a Number). It returns true if the value passed to it is NaN, and false otherwise.\par

\pard\sa200\sl276\slmult1\fs42 3.What is negative Infinity?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 Negative Infinity in JavaScript represents a value that is smaller than any other number, including negative numbers.\par

\pard\sa200\sl276\slmult1\fs42 4.Which company developed JavaScript?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 JavaScript was developed by Netscape Communications Corporation, particularly by Brendan Eich. It was originally created in 1995 to add interactivity to webpages in the Netscape Navigator browser.\par

\pard\sa200\sl276\slmult1\fs42 5.What are undeclared and undefined variables?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 Undeclared variables in JavaScript are those that have been referenced in code without being explicitly declared using the var, let, or const keywords. Attempting to use an undeclared variable typically results in a runtime error.\par

\pard\sa200\sl276\slmult1 Undeclared variables are those that have not been declared at all.\par
Undefined variables are those that have been declared but not assigned a value.\par
\fs42 6.Write the code for adding new elements dynamically?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 Create a new element using document.createElement() method.\par
{\pntext\f2\'B7\tab}Optionally, set attributes or properties of the new element using setAttribute() or direct property assignment.\par
{\pntext\f2\'B7\tab}Insert the new element into the document using methods like appendChild(), insertBefore(), or insertAdjacentElement().\par

\pard\sa200\sl276\slmult1\fs42 7.What is the difference between ViewState and SessionState?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 ViewState:\par
{\pntext\f2\'B7\tab}ViewState is used to persist the state of a single web page across postbacks.\par
{\pntext\f2\'B7\tab}It is stored as a hidden field on the page itself.\par
{\pntext\f2\'B7\tab}ViewState is specific to a particular page and is not accessible from other pages.\par
{\pntext\f2\'B7\tab}It is suitable for maintaining the state of controls, such as textbox values, checkboxes, etc., within the same page across postbacks.\par
{\pntext\f2\'B7\tab}SessionState:\par
{\pntext\f2\'B7\tab}SessionState is used to persist user-specific data across multiple web pages or requests during a user's session.\par
{\pntext\f2\'B7\tab}It is stored on the server, either in memory, in a separate process, or in a database, depending on the configuration.\par
{\pntext\f2\'B7\tab}SessionState is accessible from all pages within the same session, allowing you to store and retrieve user-related information such as user preferences, shopping cart items, etc.\par
{\pntext\f2\'B7\tab}It is ideal for maintaining state information that needs to be shared among multiple pages or requests within the same session.\par

\pard\sa200\sl276\slmult1\fs42 8.What is === operator?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 The === operator in JavaScript is known as the strict equality operator. It compares two values, including their types, to check if they are exactly the same without performing type conversion.\par

\pard\sa200\sl276\slmult1\fs42 9.How can the style/class of an element be changed?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 The style or class of an HTML element can be changed in JavaScript using the following methods:\par
{\pntext\f2\'B7\tab}Changing Style Directly:\par
{\pntext\f2\'B7\tab}Use the style property of the element to directly manipulate its CSS properties.\par
{\pntext\f2\'B7\tab}Example: element.style.property = value;\par
{\pntext\f2\'B7\tab}Changing Class:\par
{\pntext\f2\'B7\tab}Use the classList property of the element to add, remove, or toggle CSS classes.\par
{\pntext\f2\'B7\tab}Example: element.classList.add('className');\par
{\pntext\f2\'B7\tab}Changing Attributes:\par
{\pntext\f2\'B7\tab}Use the setAttribute() and removeAttribute() methods to change or remove specific attributes, including the class attribute.\par
{\pntext\f2\'B7\tab}Example: element.setAttribute('class', 'newClass');\par

\pard\sa200\sl276\slmult1\fs42 10.How to read and write a file using JavaScript?\par
\fs28 Reading and writing files in JavaScript typically involves using the File System module (fs) in Node.js for server-side applications or the FileReader API for client-side applications in web browsers. \par
\fs42 11.What are all the looping structures in JavaScript?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 for loop: Used when the number of iterations is known.\par
{\pntext\f2\'B7\tab}while loop: Used when the number of iterations is not known in advance.\par
{\pntext\f2\'B7\tab}do...while loop: Similar to while but guarantees at least one execution of the block.\par
{\pntext\f2\'B7\tab}for...in loop: Iterates over the properties of an object.\par
{\pntext\f2\'B7\tab}for...of loop: Iterates over iterable objects like arrays.\par
{\pntext\f2\'B7\tab}forEach() method: Used to iterate over arrays and execute a function for each element.\par

\pard\sa200\sl276\slmult1\fs42 12.How can you convert the string of any base to an integer in JavaScript?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 To convert a string representing a number in any base to an integer in JavaScript, you can use the parseInt() function with the second parameter specifying the base of the number\fs42 . \fs28\par

\pard\sa200\sl276\slmult1\fs42 13.What is the function of the delete operator?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 The delete operator is used to remove properties from objects or elements from arrays.\par
{\pntext\f2\'B7\tab}It does not directly deallocate memory. It simply removes references to the property or element, allowing it to be garbage collected if there are no other references.\par
{\pntext\f2\'B7\tab}When used with arrays, it leaves a hole at the deleted index, resulting in an undefined value.\par
{\pntext\f2\'B7\tab}delete has no effect on variables declared with var, let, or const, or function arguments.\par

\pard\sa200\sl276\slmult1\fs42 14.What are all the types of Pop up boxes available in JavaScript?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 Alert Box (alert()): Displays a message box with an OK button.\par
{\pntext\f2\'B7\tab}Confirm Box (confirm()): Displays a message box with OK and Cancel buttons, allowing users to confirm an action.\par
{\pntext\f2\'B7\tab}Prompt Box (prompt()): Displays a message box with an input field and OK and Cancel buttons, allowing users to enter data.\par

\pard\sa200\sl276\slmult1\fs42 15.What is the use of Void (0)?\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li720\sa200\sl276\slmult1\fs28 void(0) is used to prevent the browser from performing any default action when clicking on a link.\par
{\listtext\f0 1\tab}It evaluates the expression 0, which always results in undefined.\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\ilvl8\fi-360\li720\sa200\sl276\slmult1 Commonly used in JavaScript URLs to create pseudo-links for actions triggered by clicking a link without navigating to a new page.\par

\pard\sa200\sl276\slmult1\fs42 16.How can a page be forced to load another page in JavaScript?\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 window.location.href: Assigning a new URL to window.location.href causes the browser to navigate to the specified URL.\par
{\pntext\f2\'B7\tab}window.location.assign(): Similar to window.location.href, this method navigates to the specified URL.\par
{\pntext\f2\'B7\tab}window.location.replace(): Replaces the current page's URL in the history stack, making it impossible to navigate back to the original page using the browser's back button.\par
{\pntext\f2\'B7\tab}window.open(): Opens a new browser window or tab with the specified URL\par

\pard\sa200\sl276\slmult1\fs42 17.What are the disadvantages of using innerHTML in JavaScript?\par
\fs28 Security Risks:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Using innerHTML to modify content can expose your application to cross-site scripting (XSS) attacks if the inserted content is not properly sanitized\par

\pard\sa200\sl276\slmult1 Performance Overhead:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1  This can lead to performance issues, especially on mobile devices or low-powered devices.\par

\pard\sa200\sl276\slmult1\fs42 18.Create password field with show hide functionalities\par
\fs28 function togglePasswordVisibility() \{\par
  const passwordInput = document.getElementById("passwordInput");\par
  const toggleButton = document.getElementById("toggleButton");\par
  if (passwordInput.type === "password") \{\par
    passwordInput.type = "text";\par
    toggleButton.textContent = "Hide Password";\par
  \} else \{\par
    passwordInput.type = "password";\par
    toggleButton.textContent = "Show Password";\par
  \}\par
\}\par
\fs42 19.Create basic math operation in JS\fs28\par
// Addition\par
const sum = 10 + 5;\par
console.log("Addition:", sum); // Output: 15\par
// Subtraction\par
const difference = 10 - 5;\par
console.log("Subtraction:", difference); // Output: 5\par
// Multiplication\par
const product = 10 * 5;\par
console.log("Multiplication:", product); // Output: 50\par
// Division\par
const quotient = 10 / 5;\par
console.log("Division:", quotient); // Output: 2\par
// Modulus (Remainder)\par
const remainder = 10 % 3;\par
console.log("Remainder:", remainder); // Output: 1\par
\fs42  \par
\fs28\par
\par
\par
}
 